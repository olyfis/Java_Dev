package com.olympus.webreport;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.util.ArrayList;
import javax.servlet.Servlet;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;

import org.json.JSONArray;
import org.json.JSONObject;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.Iterator;
import java.util.Properties;
import java.util.Set;
import com.olympus.util.JButils;
import org.w3c.dom.NodeList;
import java.sql.*;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
 
 


@WebServlet("/GetChartData")
public class GetChartData extends HttpServlet {

/************************************************************************************************************************************************/
	public static int strToInt( String str ){
	    int i = 0;
	    int num = 0;
	    boolean isNeg = false;

	    //Check for negative sign; if it's there, set the isNeg flag
	    if (str.charAt(0) == '-') {
	        isNeg = true;
	        i = 1;
	    }

	    //Process each character of the string;
	    while( i < str.length()) {
	        num *= 10;
	        num += str.charAt(i++) - '0'; //Minus the ASCII code of '0' to get the value of the charAt(i++).
	    }

	    if (isNeg)
	        num = -num;
	    return num;
	}
/************************************************************************************************************************************************/
	
//method to print array
public static void printName(ArrayList<String> line_arr){

		// iterating ArrayList
		for (String str : line_arr)
			System.out.println("DATA:" + str + "---");

		// System.out.println(names[index]);
}
/************************************************************************************************************************************************/
public static JSONArray getXMLdata() {
		
		String status = null;
		String percentShipped = null;
		int limit = 95;
		int rel_count = 0;
		int pend_count = 0;
		String outData = null;
		String outDataLine = null;
		int count = 0;
		
		JSONArray json = new JSONArray();
		JSONObject obj = new JSONObject();
		
		
		ArrayList<String> lines = new ArrayList<String>();
		ArrayList<String> xData = new ArrayList<String>();
		
		try {
		    File fXmlFile = new File("d:\\Pentaho\\Kettle\\Dashboard\\XML\\dashboard_NF\\sharepoint_NF.xml");
		    DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
		    DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
		    Document doc = dBuilder.parse(fXmlFile);
		    doc.getDocumentElement().normalize();

		    //System.out.println("Root element :" + doc.getDocumentElement().getNodeName());
		    NodeList nList = doc.getElementsByTagName("SharePt_r");
		    System.out.println("----------------------------");

			for (int temp = 0; temp < nList.getLength(); temp++) {
				Node nNode = nList.item(temp);
				// System.out.println("\nCurrent Element :" + nNode.getNodeName());
				if (nNode.getNodeType() == Node.ELEMENT_NODE) {
					Element eElement = (Element) nNode;
					status = eElement.getElementsByTagName("CO_UD_CO_APP_STATUS_TBDESC").item(0).getTextContent();
					percentShipped = eElement.getElementsByTagName("Percent_Ship").item(0).getTextContent();
					String percentShipped2 = percentShipped.replace("%", "");
					int percent = 0;
					if (!percentShipped2.isEmpty()) {
						percent = Integer.parseInt(percentShipped2);
					}
					if ((status.matches("Order Released")) && (percent >= limit)) {
						rel_count++;
						//System.out.println("\nStatus:" + status + " -- Percent Shipped:" + percent + "--");
					}
					if ((status.matches("Pending Booking")) && (percent >= limit)) {
						pend_count++;
						//System.out.println("\nStatus:" + status + " -- Percent Shipped:" + percent + "--");
					}
				}
			}
			System.out.println("\nPending:" + pend_count + " -- Released:" + rel_count + "--");
			
			
			try {
				obj.put("pending", pend_count);
				obj.put("release", rel_count);

				json.put(obj);
				
			} catch (Exception e) {
				e.printStackTrace();
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return json;
		
}		
/************************************************************************************************************************************************/
public static void displayJsonArray(JSONArray jsonArr) {
	System.out.println("in displayJsonArray\n");
	Iterator<Object> iterator = jsonArr.iterator();
	// Set<String> keys = jsonObject.keySet();
	while (iterator.hasNext()) {

		Object obj = iterator.next();
		if (obj instanceof JSONObject) {
			Set<String> keys = ((JSONObject) obj).keySet();
			System.out.println("%%%%%%%%% KEYS %%%%%%%%" + keys.toString() + "keyNum=" +  keys.size());
			for (String key : keys) {
				// System.out.println(key + ":" + jsonObject.get(key));
				System.out.println("*******Key: " + key + " -> " + ((JSONObject) obj).get(key));
			}
			// System.out.println("*******" + ((JSONObject) obj).get("CUST_ID"));
		}
	}
}
/************************************************************************************************************************************************/
/************************************************************************************************************************************************/
@Override
protected void doGet(HttpServletRequest req, HttpServletResponse res) 
		throws ServletException, IOException {
	
	JSONArray jsonArr = new JSONArray();
	jsonArr = getXMLdata();	
	//printName(xData);
	displayJsonArray(jsonArr);
	
}
 
/************************************************************************************************************************************************/

}
