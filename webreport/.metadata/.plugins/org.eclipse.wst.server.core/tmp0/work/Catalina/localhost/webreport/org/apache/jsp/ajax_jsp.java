/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.10
 * Generated at: 2019-01-04 18:27:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java.net.InetAddress;

public final class ajax_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.InetAddress");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("  <link rel=\"stylesheet\" href=\"includes/css/calendar.css\" />\r\n");
      out.write("    <script type=\"text/javascript\" src=\"includes/scripts/pureJSCalendar.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" <html>\r\n");
      out.write(" <head>\r\n");
      out.write(" <meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write(" <!-- \r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <title>jQuery UI Datepicker - Default functionality</title>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/resources/demos/style.css\">\r\n");
      out.write("  <script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("  <script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("  <script>\r\n");
      out.write("  $( function() {\r\n");
      out.write("    $( \"#datepicker\" ).datepicker();\r\n");
      out.write("  } );\r\n");
      out.write("  \r\n");
      out.write("  $( function() {\r\n");
      out.write("\t    $( \"#datepicker2\" ).datepicker();\r\n");
      out.write("\t  } );\r\n");
      out.write("  \r\n");
      out.write("  </script>\r\n");
      out.write("  \r\n");
      out.write("  -->\r\n");
      out.write(" </head>\r\n");
      out.write(" <body>\r\n");
      out.write("\r\n");
      out.write(" <!--  \r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/sfquery", out, true);
      out.write("\r\n");
      out.write("<c:out value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${strArrID}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></c:out>\r\n");
      out.write(" \r\n");
      out.write("  <c:forEach items=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${strArrID}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" var=\"id\">\r\n");
      out.write("            ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" <br />\r\n");
      out.write("        </c:forEach>\r\n");
      out.write(" -->\r\n");
      out.write(" ");

 
 
 
 String at = request.getParameter("atype");
 ArrayList<String> list = new ArrayList<String>();
    	//out.println("atype=" + at);

    String hostname = InetAddress.getLocalHost().getHostName();
    
    	if (at != null) {

    		if (at.equals("15")) { // NBVa report

    			//out.println("<b>ID:</b> <input type=\"text\" id=\"id\" value=101-0014274-005 />");
    			out.println("<b>ID:</b> <input type=\"text\"  name=\"id\"  value=\"XXX-XXXXXXX-XXX\" />");

    		} else if (at.equals("35")) { // asset report
    			out.println("<b>Date:</b> <input type=\"text\"  name=\"id\"  value=\"XXX-XXXXXXX-XXX\" />");
    		}  else if (at.equals("40")) { // 
    			out.print("<b>Lead ID:</b>");
    			out.print( "<tr> <td>");
    			out.print("<tr> <td class=\"table_heading\"></td> " );
    			list = (ArrayList<String>) session.getAttribute("strArrID");
    			out.print("<select name=\"leadID\" >" );
    			out.print("<option value=\"0\">Select Lead</option>" );
    			System.out.println("******** arrSize=" + list.size()); 			
    			if (! list.isEmpty()) {
	    			for(int i = 0; i < list.size(); i++) {  
	    				out.print("<option value=" + list.get(i)   +  ">" +list.get(i)  +  "</option>" );
	    			}
    			}			
    			out.print("</select></tr> </table></td> </tr>   </table> ");
    			out.println("<input type=\"hidden\"  name=\"getID\"  value=\"40\" />");
    			
    		} else if (at.equals("75") || at.equals("30")  || at.equals("25") ) { // 70 -> Rapport Booking Summary -- 30 -> Rapport Booking --  25 -> infolease
    	 
    			out.println("<b>Start Date:</b> <input name=\"startDate\" id=\"date2\" type=\"text\" value=\"Click for Calendar\" onclick=\"pureJSCalendar.open('yyyy-MM-dd', 20, 30, 7, '2017-1-1', '2025-12-31', 'date2', 20)\"   />" );
    			out.println("<b>End Date:</b> <input name=\"endDate\" id=\"date3\" type=\"text\" value=\"Click for Calendar\" onclick=\"pureJSCalendar.open('yyyy-MM-dd', 20, 30, 7, '2017-1-1', '2025-12-31', 'date3', 20)\"   />" );
//out.println("<b>End Date:</b> <input type=\"text\" id=\"datepicker\"   />" );
    					
    					if (at.equals("75")) {
					out.println("<input name=\"mType\"  type=\"hidden\" value=\"RPS\" />" );
				} else if (at.equals("30")) {
					out.println("<input name=\"mType\"  type=\"hidden\" value=\"RPB\" />" );
				} else if (at.equals("25")) {
					out.println("<input name=\"mType\"  type=\"hidden\" value=\"ILB\" />" );	
				}	
    					
    		} else if (at.equals("10")) {
				out.println("Click Run");
    			out.println("<input name=\"mType\"  type=\"hidden\" value=\"EVGR\" />" );
				//out.println("<b>Click for Excel File:</b> <input type=\"checkbox\" name=\"EGEXL\" value=\"EGEXL\" > ");
    		
    		} else if ( at.equals("60")  || at.equals("70")   || at.equals("80")  || at.equals("85") || at.equals("90") || at.equals("95")   ) {
    			out.println("Click Run");
    			if (at.equals("1000")) {
					out.println("<input name=\"mType\"  type=\"hidden\" value=\"EVGR\" />" );
					out.println("<input type=\"checkbox\" name=\"EGEXL\" value=\"EGEXL\" > ");
				} else if (at.equals("60")) {
					out.println("<input name=\"mType\"  type=\"hidden\" value=\"LSHP\" />" );
				} else if (at.equals("70")) {
					out.println("<input name=\"mType\"  type=\"hidden\" value=\"CCAN\" />" );	
				} else if (at.equals("80")) {
					out.println("<input name=\"mType\"  type=\"hidden\" value=\"SNAP\" />" );	
				} else if (at.equals("85")) {
					out.println("<input name=\"mType\"  type=\"hidden\" value=\"UTIL\" />" );	
				}	else if (at.equals("90")) {
					out.println("<input name=\"mType\"  type=\"hidden\" value=\"MALL\" />" );	
				} else if (at.equals("95")) {
					out.println("<input name=\"mType\"  type=\"hidden\" value=\"MAST\" />" );	
				}		
    			
    		}
    	    else {
    			out.println("Click Run");
    		}
    	}
    	//out.println( "<input type=\"text\" id=\"id\" value="   + session.getAttribute("atype") + "/>");
    	//out.println( "<input type=\"text\" id=\"id\" value="   + id + "/>");
    
      out.write("\r\n");
      out.write("    \r\n");
      out.write(" </body>\r\n");
      out.write(" </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
